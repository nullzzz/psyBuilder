import os
import sys
import datetime

from PyQt5.QtCore import Qt, QSettings, QTimer, QPropertyAnimation
from PyQt5.QtGui import QIcon
from PyQt5.QtWidgets import QMainWindow, QAction, QApplication, QFileDialog, QMessageBox

from app.attributes.main import Attributes
from app.center.main import Center
from app.center.widget_tabs.events.cycle.main import Cycle
from app.center.widget_tabs.events.durationPage import DurationPage
from app.center.widget_tabs.timeline.main import Timeline
from app.deviceSelection.globalSelection.globalDevices import GlobalDevice
from app.deviceSelection.progressBar import LoadingTip
from app.func import Func
from app.info import Info
from app.output.main import Output
from app.properties.main import Properties
from app.structure.main import Structure
from .wait_dialog import WaitDialog
class compilePTB:
    def __init__(self, parent=None):
        if not Info.FILE_NAME:
            if not self.getFileName():
                QMessageBox.information(self, "Warning", "File must be saved before compiling.", QMessageBox.Ok)
                return

        # get save path
        compile_file_name = ".".join(Info.FILE_NAME.split('.')[:-1]) + ".m"
        # open file
        with open(compile_file_name, "w") as f:
            #  print function start info
            # import datetime

            cFilenameOnly = os.path.split(compile_file_name)[1].split('.')[0]
            # the help info
            print(f"function {cFilenameOnly}()", file=f)
            print(f"% function generated by PTB Builder 0.1", file=f)
            print(f"% If you use PTB Builder for your research, then we would appreciate your citing our work in your paper:",file=f)
            print(f"% , (2019) PTB builder: a free GUI to generate experimental codes for Psychoolbox. Behavior Research Methods\n",file=f)
            print(f"% To report possible bugs and any suggestions please send us e-mail:", file=f)
            print(f"% Yang Zhang", file=f)
            print(f"% Ph.D, Prof.", file=f)
            print(f"% Department of Psychology, \nSooChow University", file=f)
            print(f"% zhangyang873@gmail.com \nOr yzhangpsy@suda.edu.cn", file=f)
            print(f"% {datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')}", file=f)
            # begin of the function
            print(f"%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%", file=f)
            print(f"%      begin      ", file=f)
            print(f"%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%", file=f)
            # get subject information
            print(f"%----- get subject information -------/", file=f)
            print(f"{cFilenameOnly} = OpenExp_BCL('{cFilenameOnly}',pwd);", file=f)
            print(f"close(gcf);", file=f)
            print(f"%-------------------------------------\\\n", file=f)

            # the function body try, catch end
            print(f"try", file=f)

            print(f"\t\tKbName('UnifyKeyNames');\n", file=f)
            print(f"\t\tabortKeyCode = KbName('ESCAPE');\n", file=f)

            print(f"\t\texpStartTime = datestr(now,'dd-mmm-YYYY:HH:MM:SS'); % record start time \n", file=f)

            print(f"\t\t%--------Reinitialize the global random seed ---------/", file=f)
            print(f"\t\tcRandSeed = RandStream('mt19937ar','Seed','shuffle');", file=f)
            print(f"\t\tRandStream.setGlobalStream(cRandSeed);\n", file=f)
            print(f"\t\t%-----------------------------------------------------\\\n", file=f)

            print(f"\t\texpEndTime = datestr(now,'dd-mmm-YYYY:HH:MM:SS'); % record the end time \n", file=f)
            print(f"\t\tsca;                        % Close opened windows", file=f)
            print(f"\t\tShowCursor;                 % Show the hided mouse cursor", file=f)
            print(f"\t\tPriority(0);                % Turn the priority back to normal", file=f)
            print(f"\t\tRestrictKeysForKbCheck([]); % Re-enable all keys\n", file=f)
            print(f"\t\tsave '{cFilenameOnly}.filename; % save the results\n", file=f)
            print(f"\t%%%%%%%%%%%%%%%%%%%%%", file=f)
            print(f"\t% end of exp", file=f)
            print(f"\t%%%%%%%%%%%%%%%%%%%%%\n", file=f)
            print(f"\tcatch {cFilenameOnly}_error\n", file=f)

            print(f"\t\tsca;                        % Close opened windows", file=f)
            print(f"\t\tShowCursor;                 % Show the hided mouse cursor", file=f)
            print(f"\t\tPriority(0);                % Turn the priority back to normal", file=f)
            print(f"\t\tsave {cFilenameOnly}_debug;", file=f)
            print(f"\t\trethrow({cFilenameOnly}_error);", file=f)
            print(f"\tend % try\n", file=f)

            print(f"end % function \n\n\n\n\n\n\n", file=f)

            print(f"%%%%%%%%%%%%%%%%%%%%%%%%%%%%", file=f)
            print(f"% subfun 1: detectAbortKey", file=f)
            print(f"%%%%%%%%%%%%%%%%%%%%%%%%%%%%", file=f)

            print(f"function detectAbortKey_bcl(abortKeyCode)\n", file=f)
            print(f"\t[keyIsDown, Noused, keyCode] = responseCheck(-1);", file=f)
            print(f"\tif keyCode(abortKeyCode)", file=f)
            print(f"\t\terror('The experiment was aborted by the experimenter!')", file=f)
            print(f"\tend", file=f)
            print(f"end\n", file=f)
